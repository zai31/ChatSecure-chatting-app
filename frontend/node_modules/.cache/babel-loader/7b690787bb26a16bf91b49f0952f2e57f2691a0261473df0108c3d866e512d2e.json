{"ast":null,"code":"var _jsxFileName = \"C:\\\\Intel\\\\whats-clone-backEnd\\\\frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { ReactKeycloakProvider } from '@react-keycloak/web';\nimport keycloak, { initKeycloak, logout } from './keycloak';\nimport App from './App';\nimport axios from 'axios';\n\n// Configure axios defaults\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:8080';\n\n// Ensure URL is a string\nconst ensureStringUrl = url => {\n  if (typeof url === 'string') {\n    return url;\n  }\n  if (url instanceof URL) {\n    return url.toString();\n  }\n  if (typeof url === 'object' && url.origin) {\n    return `${url.origin}${url.pathname || ''}`;\n  }\n  console.warn('Invalid URL format:', url);\n  return window.location.origin;\n};\n\n// Function to render error message with suggestions\nconst renderError = error => {\n  // Handle undefined error object\n  const errorObj = error || {\n    message: 'Unknown error during Keycloak initialization'\n  };\n  const errorDetails = errorObj.message || 'Unknown error';\n  const suggestions = errorObj.suggestions || ['Make sure Keycloak server is running on port 9090', 'Check CORS settings in Keycloak', 'Verify client configuration in Keycloak', 'Ensure Web Origins in client settings includes http://localhost:4200'];\n  console.error('Failed to initialize app:', errorObj);\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-container\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      padding: '20px',\n      backgroundColor: '#f8f9fa',\n      color: '#343a40',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '600px',\n        padding: '30px',\n        borderRadius: '8px',\n        backgroundColor: 'white',\n        boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#dc3545',\n          marginBottom: '20px'\n        },\n        children: \"Authentication Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '18px',\n          marginBottom: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: errorDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'left',\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: \"Troubleshooting Suggestions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            paddingLeft: '20px'\n          },\n          children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: '8px'\n            },\n            children: suggestion\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Check the browser console for more detailed error information.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '16px',\n            marginTop: '10px'\n          },\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this));\n};\nconst initApp = async () => {\n  try {\n    console.log('Starting Keycloak initialization...');\n    // Try to initialize with force refresh if needed\n    const keycloakInstance = await initKeycloak(false);\n    console.log('Keycloak initialized, authenticated:', keycloakInstance.authenticated);\n    if (!keycloakInstance.authenticated) {\n      console.log('Not authenticated, redirecting to login...');\n      await keycloakInstance.login();\n      return; // Login will redirect, so we don't need to continue\n    }\n\n    // Configure axios with token refresh\n    axios.interceptors.request.use(async config => {\n      if (keycloakInstance.authenticated) {\n        try {\n          // Only refresh token if it's close to expiration\n          const tokenExpired = keycloakInstance.isTokenExpired(30); // 30 seconds buffer\n          if (tokenExpired) {\n            console.log('Token expired or about to expire, refreshing...');\n            await keycloakInstance.updateToken(70);\n          }\n\n          // Add the token to the request\n          const token = keycloakInstance.token;\n          if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n            console.log('Added token to request');\n          }\n        } catch (error) {\n          console.error('Failed to refresh token:', error);\n          // Force login if token refresh fails\n          keycloakInstance.login();\n        }\n      }\n      return config;\n    }, error => {\n      console.error('Axios request interceptor error:', error);\n      return Promise.reject(error);\n    });\n\n    // Add response interceptor for 401 errors\n    axios.interceptors.response.use(response => response, async error => {\n      if (error.response && error.response.status === 401) {\n        console.log('Received 401 response, refreshing token...');\n        try {\n          await keycloakInstance.updateToken(70);\n          // Retry the request with the new token\n          const originalRequest = error.config;\n          originalRequest.headers.Authorization = `Bearer ${keycloakInstance.token}`;\n          return axios(originalRequest);\n        } catch (refreshError) {\n          console.error('Token refresh failed after 401:', refreshError);\n          // Redirect to login if refresh fails\n          keycloakInstance.login();\n        }\n      }\n      return Promise.reject(error);\n    });\n\n    // Render app only after Keycloak is initialized\n    const root = ReactDOM.createRoot(document.getElementById('root'));\n    root.render(/*#__PURE__*/_jsxDEV(ReactKeycloakProvider, {\n      authClient: keycloakInstance,\n      initOptions: {\n        onLoad: 'check-sso',\n        // Use check-sso here since we're already authenticated\n        checkLoginIframe: false,\n        pkceMethod: 'S256',\n        enableLogging: true\n      },\n      onEvent: (event, error) => {\n        console.log('Keycloak event:', event, error || '');\n        if (event === 'onAuthError' || event === 'onAuthLogout') {\n          // Handle authentication errors\n          console.error('Authentication error or logout:', error);\n        }\n      },\n      loadingComponent: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading authentication...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 35\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this));\n  } catch (error) {\n    console.error('Failed to initialize app:', error);\n    renderError(error);\n  }\n};\n\n// Start the app\ninitApp();","map":{"version":3,"names":["React","ReactDOM","ReactKeycloakProvider","keycloak","initKeycloak","logout","App","axios","jsxDEV","_jsxDEV","defaults","baseURL","ensureStringUrl","url","URL","toString","origin","pathname","console","warn","window","location","renderError","error","errorObj","message","errorDetails","suggestions","root","createRoot","document","getElementById","render","className","style","display","flexDirection","alignItems","justifyContent","height","padding","backgroundColor","color","fontFamily","children","maxWidth","borderRadius","boxShadow","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","marginTop","paddingLeft","map","suggestion","index","onClick","reload","border","cursor","initApp","log","keycloakInstance","authenticated","login","interceptors","request","use","config","tokenExpired","isTokenExpired","updateToken","token","headers","Authorization","Promise","reject","response","status","originalRequest","refreshError","authClient","initOptions","onLoad","checkLoginIframe","pkceMethod","enableLogging","onEvent","event","loadingComponent"],"sources":["C:/Intel/whats-clone-backEnd/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { ReactKeycloakProvider } from '@react-keycloak/web';\nimport keycloak, { initKeycloak, logout } from './keycloak';\nimport App from './App';\nimport axios from 'axios';\n\n// Configure axios defaults\naxios.defaults.baseURL = 'http://localhost:8080';\n\n// Ensure URL is a string\nconst ensureStringUrl = (url) => {\n    if (typeof url === 'string') {\n        return url;\n    }\n    if (url instanceof URL) {\n        return url.toString();\n    }\n    if (typeof url === 'object' && url.origin) {\n        return `${url.origin}${url.pathname || ''}`;\n    }\n    console.warn('Invalid URL format:', url);\n    return window.location.origin;\n};\n\n// Function to render error message with suggestions\nconst renderError = (error) => {\n  // Handle undefined error object\n  const errorObj = error || { message: 'Unknown error during Keycloak initialization' };\n  const errorDetails = errorObj.message || 'Unknown error';\n  const suggestions = errorObj.suggestions || [\n    'Make sure Keycloak server is running on port 9090',\n    'Check CORS settings in Keycloak',\n    'Verify client configuration in Keycloak',\n    'Ensure Web Origins in client settings includes http://localhost:4200'\n  ];\n\n  console.error('Failed to initialize app:', errorObj);\n\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(\n    <div className=\"error-container\" style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      padding: '20px',\n      backgroundColor: '#f8f9fa',\n      color: '#343a40',\n      fontFamily: 'Arial, sans-serif'\n    }}>\n      <div style={{\n        maxWidth: '600px',\n        padding: '30px',\n        borderRadius: '8px',\n        backgroundColor: 'white',\n        boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n        textAlign: 'center'\n      }}>\n        <h1 style={{ color: '#dc3545', marginBottom: '20px' }}>Authentication Error</h1>\n        <p style={{ fontSize: '18px', marginBottom: '20px' }}><strong>{errorDetails}</strong></p>\n        \n        <div style={{ textAlign: 'left', marginTop: '20px' }}>\n          <h3 style={{ marginBottom: '10px' }}>Troubleshooting Suggestions:</h3>\n          <ul style={{ paddingLeft: '20px' }}>\n            {suggestions.map((suggestion, index) => (\n              <li key={index} style={{ marginBottom: '8px' }}>{suggestion}</li>\n            ))}\n          </ul>\n        </div>\n\n        <div style={{ marginTop: '30px' }}>\n          <p>Check the browser console for more detailed error information.</p>\n          <button \n            onClick={() => window.location.reload()} \n            style={{\n              padding: '10px 20px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '16px',\n              marginTop: '10px'\n            }}\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst initApp = async () => {\n    try {\n        console.log('Starting Keycloak initialization...');\n        // Try to initialize with force refresh if needed\n        const keycloakInstance = await initKeycloak(false);\n        \n        console.log('Keycloak initialized, authenticated:', keycloakInstance.authenticated);\n        \n        if (!keycloakInstance.authenticated) {\n            console.log('Not authenticated, redirecting to login...');\n            await keycloakInstance.login();\n            return; // Login will redirect, so we don't need to continue\n        }\n\n        // Configure axios with token refresh\n        axios.interceptors.request.use(async (config) => {\n            if (keycloakInstance.authenticated) {\n                try {\n                    // Only refresh token if it's close to expiration\n                    const tokenExpired = keycloakInstance.isTokenExpired(30); // 30 seconds buffer\n                    if (tokenExpired) {\n                        console.log('Token expired or about to expire, refreshing...');\n                        await keycloakInstance.updateToken(70);\n                    }\n                    \n                    // Add the token to the request\n                    const token = keycloakInstance.token;\n                    if (token) {\n                        config.headers.Authorization = `Bearer ${token}`;\n                        console.log('Added token to request');\n                    }\n                } catch (error) {\n                    console.error('Failed to refresh token:', error);\n                    // Force login if token refresh fails\n                    keycloakInstance.login();\n                }\n            }\n            return config;\n        }, (error) => {\n            console.error('Axios request interceptor error:', error);\n            return Promise.reject(error);\n        });\n\n        // Add response interceptor for 401 errors\n        axios.interceptors.response.use(\n            (response) => response,\n            async (error) => {\n                if (error.response && error.response.status === 401) {\n                    console.log('Received 401 response, refreshing token...');\n                    try {\n                        await keycloakInstance.updateToken(70);\n                        // Retry the request with the new token\n                        const originalRequest = error.config;\n                        originalRequest.headers.Authorization = `Bearer ${keycloakInstance.token}`;\n                        return axios(originalRequest);\n                    } catch (refreshError) {\n                        console.error('Token refresh failed after 401:', refreshError);\n                        // Redirect to login if refresh fails\n                        keycloakInstance.login();\n                    }\n                }\n                return Promise.reject(error);\n            }\n        );\n\n        // Render app only after Keycloak is initialized\n        const root = ReactDOM.createRoot(document.getElementById('root'));\n        root.render(\n            <ReactKeycloakProvider \n                authClient={keycloakInstance}\n                initOptions={{ \n                    onLoad: 'check-sso', // Use check-sso here since we're already authenticated\n                    checkLoginIframe: false,\n                    pkceMethod: 'S256',\n                    enableLogging: true\n                }}\n                onEvent={(event, error) => {\n                    console.log('Keycloak event:', event, error || '');\n                    if (event === 'onAuthError' || event === 'onAuthLogout') {\n                        // Handle authentication errors\n                        console.error('Authentication error or logout:', error);\n                    }\n                }}\n                loadingComponent={<div>Loading authentication...</div>}\n            >\n                <App />\n            </ReactKeycloakProvider>\n        );\n    } catch (error) {\n        console.error('Failed to initialize app:', error);\n        renderError(error);\n    }\n};\n\n// Start the app\ninitApp();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}